@mixin componentSize() {
  &.as-large {
    height: 0.8em;
  }

  &.as-medium {
    height: 1em;
  }

  &.as-small {
    height: 2em;
  }
}

@mixin componentStyle() {
  &.as-primary {
    background-color: var(--as-surface-level-1);
    border-color: var(--as-primary);
    color: var(--as-primary);

    @include componentHoverStyles(
      $bgColor: var(--as-surface-level-0),
      $borderColor: var(--as-focus),
      $boxShadow: var(--as-primary-shadow-1)
    );

    &-solid {
      background-color: var(--as-primary);
      border-color: transparent;
      color: var(--as-primary-text);

      @include componentHoverStyles(
        $bgColor: var(--as-primary-hover),
        $borderColor: var(--as-focus),
        $boxShadow: var(--as-primary-shadow-1)
      );
    }
  }

  &.as-secondary {
    background-color: var(--as-surface-level-1);
    border-color: var(--as-secondary);
    color: var(--as-secondary);

    @include componentHoverStyles(
      $bgColor: var(--as-surface-level-0),
      $borderColor: var(--as-focus),
      $boxShadow: var(--as-secondary-shadow-1)
    );

    &-solid {
      background-color: var(--as-secondary);
      border-color: transparent;
      color: var(--as-secondary-text);

      @include componentHoverStyles(
        $bgColor: var(--as-secondary-hover),
        $borderColor: var(--as-focus),
        $boxShadow: var(--as-secondary-shadow-1)
      );
    }
  }
}

@mixin componentHoverStyles($bgColor, $borderColor, $boxShadow) {
  outline: 0;

  &:hover {
    background-color: #{$bgColor};
  }

  &:focus-within:not(:active) {
    background-color: #{$bgColor};
    border-color: #{$borderColor};
  }

  &:active {
    box-shadow: #{$boxShadow};
  }
}
